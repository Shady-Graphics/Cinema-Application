
import java.util.ArrayList;
import java.util.ResourceBundle;
import javax.swing.ButtonGroup;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import javax.swing.JToggleButton;
import javax.swing.UIManager;

public class admin extends javax.swing.JFrame {

    public String[] classification = {"G", "PG", "12A", "15A", "18"};
    public static ArrayList movies = new ArrayList();
    public static DefaultListModel mList = new DefaultListModel();
    public int selMovieId = -1;
    ArrayList<String> errors = new ArrayList();

    public admin() {
        initComponents();
        setLocationRelativeTo(this);
        updateLabels(odeon.rb);

        mList.clear();

        for (int i = 0; i < movies.size(); i++) {
            Movie m = (Movie) movies.get(i);
            mList.add(i, m.getTitle());
        }

        listMovies.setModel(mList);

        //populate the combo box with studios
//        for (int i = 0; i < studio.length; i++) {
//            cmbStudio.addItem(studio[i]);
//        }

        lblDateTime.setText(odeon.today);

        //set all components to be not editable when admin visit here for first time
        //after he clicks add, all the components will be reset to editable
        //disable all the fields in the form
        disableBtn();

        btnAdd.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroupClassification = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        btnGroupScreen = new javax.swing.ButtonGroup();
        pnlMain = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        txtFldTitle = new javax.swing.JTextField();
        lblStudio = new javax.swing.JLabel();
        cmbStudio = new javax.swing.JComboBox();
        lblClassification = new javax.swing.JLabel();
        pnlClassOption = new javax.swing.JPanel();
        tglBtn1 = new javax.swing.JToggleButton();
        tglBtn2 = new javax.swing.JToggleButton();
        tglBtn3 = new javax.swing.JToggleButton();
        tglBtn4 = new javax.swing.JToggleButton();
        tglBtn5 = new javax.swing.JToggleButton();
        lblRelDate = new javax.swing.JLabel();
        lblStaring = new javax.swing.JLabel();
        txtFldStaring = new javax.swing.JTextField();
        lblDuration = new javax.swing.JLabel();
        txtFldDuration = new javax.swing.JTextField();
        lblDirector = new javax.swing.JLabel();
        txtFldDirector = new javax.swing.JTextField();
        lblSynopsis = new javax.swing.JLabel();
        scrollPaneSynopsis = new javax.swing.JScrollPane();
        txtAreaSynopsis = new javax.swing.JTextArea();
        lblScreen = new javax.swing.JLabel();
        rdBtnOne = new javax.swing.JRadioButton();
        rdBtnTwo = new javax.swing.JRadioButton();
        rdBtnThree = new javax.swing.JRadioButton();
        rdBtnFour = new javax.swing.JRadioButton();
        rdBtnFive = new javax.swing.JRadioButton();
        rdBtnSix = new javax.swing.JRadioButton();
        rdBtnSeven = new javax.swing.JRadioButton();
        rdBtnEight = new javax.swing.JRadioButton();
        pnlAction = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        btnForward = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblCurrentMovie = new javax.swing.JLabel();
        lblMin = new javax.swing.JLabel();
        txtFldRelDate = new javax.swing.JTextField();
        lblRelDateEx = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listMovies = new javax.swing.JList();
        btnClearAllMovies = new javax.swing.JButton();
        btnClearAllFields = new javax.swing.JButton();
        lblDate = new javax.swing.JLabel();
        lblDateTime = new javax.swing.JLabel();
        btnGoToSales = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();

        setTitle("Odeon Administration");
        setResizable(false);

        pnlMain.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Movie Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTitle.setText("Title");

        lblStudio.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblStudio.setText("Studio");

        cmbStudio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Universal Pictures", "Paramount Pictures", "Warner Bros.", "Dreamworks", "20th Century Fox", "Colombia Pictures" }));
        cmbStudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbStudioActionPerformed(evt);
            }
        });

        lblClassification.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblClassification.setText("Classification");

        pnlClassOption.setLayout(new java.awt.GridLayout(1, 0));

        btnGroupClassification.add(tglBtn1);
        tglBtn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/general.png"))); // NOI18N
        tglBtn1.setToolTipText("G");
        tglBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tglBtn1ActionPerformed(evt);
            }
        });
        pnlClassOption.add(tglBtn1);

        btnGroupClassification.add(tglBtn2);
        tglBtn2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pg.png"))); // NOI18N
        tglBtn2.setToolTipText("PG");
        tglBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tglBtn2ActionPerformed(evt);
            }
        });
        pnlClassOption.add(tglBtn2);

        btnGroupClassification.add(tglBtn3);
        tglBtn3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/12a.png"))); // NOI18N
        tglBtn3.setToolTipText("12A");
        tglBtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tglBtn3ActionPerformed(evt);
            }
        });
        pnlClassOption.add(tglBtn3);

        btnGroupClassification.add(tglBtn4);
        tglBtn4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/15a.png"))); // NOI18N
        tglBtn4.setToolTipText("15A");
        pnlClassOption.add(tglBtn4);

        btnGroupClassification.add(tglBtn5);
        tglBtn5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/18.png"))); // NOI18N
        tglBtn5.setToolTipText("18");
        pnlClassOption.add(tglBtn5);

        lblRelDate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblRelDate.setText("Release Date");

        lblStaring.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblStaring.setText("Staring");

        lblDuration.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblDuration.setText("Duration");

        lblDirector.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblDirector.setText("Director");

        lblSynopsis.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblSynopsis.setText("Synopsis");

        txtAreaSynopsis.setColumns(20);
        txtAreaSynopsis.setRows(5);
        scrollPaneSynopsis.setViewportView(txtAreaSynopsis);

        lblScreen.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblScreen.setText("Screen");

        btnGroupScreen.add(rdBtnOne);
        rdBtnOne.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdBtnOne.setText("One");
        rdBtnOne.setToolTipText("Screen 1");

        btnGroupScreen.add(rdBtnTwo);
        rdBtnTwo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdBtnTwo.setText("Two");
        rdBtnTwo.setToolTipText("Screen 2");

        btnGroupScreen.add(rdBtnThree);
        rdBtnThree.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdBtnThree.setText("Three");
        rdBtnThree.setToolTipText("Screen 3");

        btnGroupScreen.add(rdBtnFour);
        rdBtnFour.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdBtnFour.setText("Four");
        rdBtnFour.setToolTipText("Screen 4");

        btnGroupScreen.add(rdBtnFive);
        rdBtnFive.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdBtnFive.setText("Five");

        btnGroupScreen.add(rdBtnSix);
        rdBtnSix.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdBtnSix.setText("Six");

        btnGroupScreen.add(rdBtnSeven);
        rdBtnSeven.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdBtnSeven.setText("Seven");

        btnGroupScreen.add(rdBtnEight);
        rdBtnEight.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdBtnEight.setText("Eight");

        pnlAction.setLayout(new java.awt.GridLayout(1, 0));

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back.png"))); // NOI18N
        btnBack.setText("Back");
        btnBack.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBack.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        pnlAction.add(btnBack);

        btnForward.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/forward.png"))); // NOI18N
        btnForward.setText("Forward");
        btnForward.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnForward.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnForward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForwardActionPerformed(evt);
            }
        });
        pnlAction.add(btnForward);

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add1.jpg"))); // NOI18N
        btnAdd.setText("Add");
        btnAdd.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAdd.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        pnlAction.add(btnAdd);

        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit.png"))); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEdit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        pnlAction.add(btnEdit);

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update.png"))); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnUpdate.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        pnlAction.add(btnUpdate);

        btnRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/remove1.png"))); // NOI18N
        btnRemove.setText("Remove");
        btnRemove.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRemove.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });
        pnlAction.add(btnRemove);

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel.png"))); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        pnlAction.add(btnCancel);

        lblCurrentMovie.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCurrentMovie.setText("Movies Now Showing");

        lblMin.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblMin.setText("min");

        lblRelDateEx.setText("dd/mm/yyyy");

        listMovies.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listMoviesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listMovies);

        btnClearAllMovies.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnClearAllMovies.setText("Clear All Movies");
        btnClearAllMovies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearAllMoviesActionPerformed(evt);
            }
        });

        btnClearAllFields.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnClearAllFields.setText("Clear All Fields");
        btnClearAllFields.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearAllFieldsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlAction, javax.swing.GroupLayout.DEFAULT_SIZE, 803, Short.MAX_VALUE)
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTitle)
                            .addComponent(lblStudio)
                            .addComponent(lblClassification)
                            .addComponent(lblRelDate)
                            .addComponent(lblStaring)
                            .addComponent(lblDuration)
                            .addComponent(lblSynopsis)
                            .addComponent(lblScreen))
                        .addGap(60, 60, 60)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlMainLayout.createSequentialGroup()
                                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlMainLayout.createSequentialGroup()
                                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(pnlClassOption, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
                                            .addGroup(pnlMainLayout.createSequentialGroup()
                                                .addComponent(txtFldDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lblMin)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 163, Short.MAX_VALUE)
                                                .addComponent(lblDirector)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(txtFldDirector, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(txtFldStaring, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
                                            .addComponent(cmbStudio, 0, 449, Short.MAX_VALUE)
                                            .addComponent(txtFldTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
                                            .addComponent(scrollPaneSynopsis, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE))
                                        .addGap(23, 23, 23))
                                    .addGroup(pnlMainLayout.createSequentialGroup()
                                        .addComponent(txtFldRelDate, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblRelDateEx)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(btnClearAllFields, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnClearAllMovies, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE))
                                    .addComponent(lblCurrentMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnlMainLayout.createSequentialGroup()
                                .addComponent(rdBtnOne)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rdBtnTwo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rdBtnThree)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rdBtnFour)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rdBtnFive)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rdBtnSix)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rdBtnSeven)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rdBtnEight)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 163, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitle)
                    .addComponent(txtFldTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCurrentMovie))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblStudio)
                            .addComponent(cmbStudio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblClassification)
                            .addComponent(pnlClassOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRelDate)
                            .addComponent(txtFldRelDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblRelDateEx))
                        .addGap(19, 19, 19)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblStaring)
                            .addComponent(txtFldStaring, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDuration)
                            .addComponent(txtFldDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFldDirector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDirector)
                            .addComponent(lblMin))
                        .addGap(18, 18, 18)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSynopsis)
                            .addComponent(scrollPaneSynopsis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnClearAllMovies)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnClearAllFields)))
                .addGap(28, 28, 28)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblScreen)
                    .addComponent(rdBtnOne)
                    .addComponent(rdBtnTwo)
                    .addComponent(rdBtnThree)
                    .addComponent(rdBtnFour)
                    .addComponent(rdBtnFive)
                    .addComponent(rdBtnSix)
                    .addComponent(rdBtnSeven)
                    .addComponent(rdBtnEight))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlAction, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblDate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblDate.setText("Date:");

        lblDateTime.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        btnGoToSales.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnGoToSales.setText("Sales");
        btnGoToSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoToSalesActionPerformed(evt);
            }
        });

        btnHome.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblDateTime, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 145, Short.MAX_VALUE)
                        .addComponent(btnHome)
                        .addGap(18, 18, 18)
                        .addComponent(btnGoToSales, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnGoToSales)
                        .addComponent(btnHome))
                    .addComponent(lblDateTime, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(7, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-861)/2, (screenSize.height-604)/2, 861, 604);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed

        //when user clicks add btn and all btns are disabled
        //user wants to add a movie, enable buttons
        if (!txtFldTitle.isEnabled()) {

            clearFields();

            enableBtn();

            txtFldTitle.requestFocus();

            btnEdit.setEnabled(false);
            btnRemove.setEnabled(false);
            btnUpdate.setEnabled(false);
            btnBack.setEnabled(false);
            btnForward.setEnabled(false);

            btnCancel.setEnabled(true);

        } else {//user clicked add btn again for adding a movie
            //take all the information, store it and disable btns again

            if (addMovie()) {
                addToList();
                clearFields();
                disableBtn();
                btnAdd.setEnabled(true);

                if (movies.size() > 1) {
                    btnBack.setEnabled(true);
                    btnForward.setEnabled(true);
                }

                listMovies.setEnabled(true);
            }

        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void cmbStudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbStudioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbStudioActionPerformed

    private void tglBtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tglBtn3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tglBtn3ActionPerformed

    private void tglBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tglBtn2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tglBtn2ActionPerformed

    private void tglBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tglBtn1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tglBtn1ActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        if (movies.isEmpty()) {
            btnRemove.setEnabled(false);
        }
        removeMovie(listMovies.getSelectedIndex());

        if (movies.size() < 2) {
            btnBack.setEnabled(false);
            btnForward.setEnabled(false);
        }


    }//GEN-LAST:event_btnRemoveActionPerformed

    private void listMoviesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listMoviesMouseClicked
        if (movies.size() > 0) {
            //get the id (index) of the selected movie
            selMovieId = listMovies.getSelectedIndex();

            btnEdit.setEnabled(true);
            btnRemove.setEnabled(true);
            btnCancel.setEnabled(true);

            btnAdd.setEnabled(true);

            System.out.println(listMovies.getSelectedIndex());
            retrieveMovie(listMovies.getSelectedIndex());
        } else {
            btnCancel.setEnabled(false);
        }

    }//GEN-LAST:event_listMoviesMouseClicked

    private void btnForwardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForwardActionPerformed

        int id = selMovieId;

        if (++id >= movies.size()) {
            id = 0;
        }

        listMovies.setSelectedIndex(id++);


        retrieveMovie(listMovies.getSelectedIndex());


        selMovieId = listMovies.getSelectedIndex();



    }//GEN-LAST:event_btnForwardActionPerformed

    private void btnClearAllMoviesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearAllMoviesActionPerformed
        movies.clear();
        addToList();

        btnEdit.setEnabled(false);
        btnRemove.setEnabled(false);
        btnCancel.setEnabled(false);
    }//GEN-LAST:event_btnClearAllMoviesActionPerformed

    private void btnClearAllFieldsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearAllFieldsActionPerformed
        clearFields();
    }//GEN-LAST:event_btnClearAllFieldsActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        clearFields();
        disableBtn();

        if (movies.size() > 1) {
            btnBack.setEnabled(true);
            btnForward.setEnabled(true);
        }
        btnAdd.setEnabled(true);

        //try to deselect item from the list
        listMovies.clearSelection();
        listMovies.setEnabled(true);

    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        enableBtn();

        btnAdd.setEnabled(false);
        btnEdit.setEnabled(false);
        btnRemove.setEnabled(false);

        if (movies.size() < 2) {
            btnBack.setEnabled(false);
            btnForward.setEnabled(false);
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        editMovie(listMovies.getSelectedIndex());

        clearFields();
        disableBtn();

        btnAdd.setEnabled(true);
        if (movies.size() > 1) {
            btnBack.setEnabled(true);
            btnForward.setEnabled(true);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        int id = selMovieId;

        if (--id < 0) {
            id = movies.size() - 1;
        }

        listMovies.setSelectedIndex(id--);


        retrieveMovie(listMovies.getSelectedIndex());


        selMovieId = listMovies.getSelectedIndex();



    }//GEN-LAST:event_btnBackActionPerformed

    private void btnGoToSalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoToSalesActionPerformed
        new sale().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnGoToSalesActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        new odeon().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnHomeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new admin().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnClearAllFields;
    private javax.swing.JButton btnClearAllMovies;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnForward;
    private javax.swing.JButton btnGoToSales;
    private javax.swing.ButtonGroup btnGroupClassification;
    private javax.swing.ButtonGroup btnGroupScreen;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox cmbStudio;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblClassification;
    private javax.swing.JLabel lblCurrentMovie;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDateTime;
    private javax.swing.JLabel lblDirector;
    private javax.swing.JLabel lblDuration;
    private javax.swing.JLabel lblMin;
    private javax.swing.JLabel lblRelDate;
    private javax.swing.JLabel lblRelDateEx;
    private javax.swing.JLabel lblScreen;
    private javax.swing.JLabel lblStaring;
    private javax.swing.JLabel lblStudio;
    private javax.swing.JLabel lblSynopsis;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JList listMovies;
    private javax.swing.JPanel pnlAction;
    private javax.swing.JPanel pnlClassOption;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JRadioButton rdBtnEight;
    private javax.swing.JRadioButton rdBtnFive;
    private javax.swing.JRadioButton rdBtnFour;
    private javax.swing.JRadioButton rdBtnOne;
    private javax.swing.JRadioButton rdBtnSeven;
    private javax.swing.JRadioButton rdBtnSix;
    private javax.swing.JRadioButton rdBtnThree;
    private javax.swing.JRadioButton rdBtnTwo;
    private javax.swing.JScrollPane scrollPaneSynopsis;
    private javax.swing.JToggleButton tglBtn1;
    private javax.swing.JToggleButton tglBtn2;
    private javax.swing.JToggleButton tglBtn3;
    private javax.swing.JToggleButton tglBtn4;
    private javax.swing.JToggleButton tglBtn5;
    private javax.swing.JTextArea txtAreaSynopsis;
    private javax.swing.JTextField txtFldDirector;
    private javax.swing.JTextField txtFldDuration;
    private javax.swing.JTextField txtFldRelDate;
    private javax.swing.JTextField txtFldStaring;
    private javax.swing.JTextField txtFldTitle;
    // End of variables declaration//GEN-END:variables

    private void enableBtn() {
        JTextField[] txtfields = {txtFldTitle, txtFldRelDate, txtFldStaring, txtFldDuration, txtFldDirector};
        JButton[] buttons = {btnBack, btnForward, btnAdd, btnEdit, btnUpdate, btnRemove, btnCancel};
        JRadioButton[] rdbuttons = {rdBtnOne, rdBtnTwo, rdBtnThree, rdBtnFour, rdBtnFive, rdBtnSix, rdBtnSeven, rdBtnEight};

        JToggleButton[] tglbuttons = {tglBtn1, tglBtn2, tglBtn3, tglBtn4, tglBtn5};
        ButtonGroup[] btnGrp = {btnGroupClassification, btnGroupScreen};


        //when user clicks add btn and all btns are disabled
        //user wants to add a movie, enable buttons

        for (int i = 0; i < txtfields.length; i++) {
            txtfields[i].setEnabled(true);
        }

        for (int i = 0; i < buttons.length; i++) {
            buttons[i].setEnabled(true);
        }

        for (int i = 0; i < rdbuttons.length; i++) {
            rdbuttons[i].setEnabled(true);
        }

        for (int i = 0; i < tglbuttons.length; i++) {
            tglbuttons[i].setEnabled(true);
        }

        cmbStudio.setEnabled(true);
        txtFldRelDate.setEnabled(true);
        txtAreaSynopsis.setEnabled(true);

    }

    private void disableBtn() {
        JTextField[] txtfields = {txtFldTitle, txtFldRelDate, txtFldStaring, txtFldDuration, txtFldDirector};
        JButton[] buttons = {btnBack, btnForward, btnAdd, btnEdit, btnUpdate, btnRemove, btnCancel};
        JRadioButton[] rdbuttons = {rdBtnOne, rdBtnTwo, rdBtnThree, rdBtnFour, rdBtnFive, rdBtnSix, rdBtnSeven, rdBtnEight};

        JToggleButton[] tglbuttons = {tglBtn1, tglBtn2, tglBtn3, tglBtn4, tglBtn5};
        ButtonGroup[] btnGrp = {btnGroupClassification, btnGroupScreen};

        //all textfields and textareas and radiobuttons and toggle buttons
        for (int i = 0; i < txtfields.length; i++) {
            txtfields[i].setEnabled(false);
        }

        for (int i = 0; i < buttons.length; i++) {
            buttons[i].setEnabled(false);
        }

        for (int i = 0; i < rdbuttons.length; i++) {
            rdbuttons[i].setEnabled(false);
        }

        for (int i = 0; i < tglbuttons.length; i++) {
            tglbuttons[i].setEnabled(false);
        }

        cmbStudio.setEnabled(false);
        txtFldRelDate.setEnabled(false);
        txtAreaSynopsis.setEnabled(true);

    }

    public void clearFields() {
        JTextField[] txtfields = {txtFldTitle, txtFldRelDate, txtFldStaring, txtFldDuration, txtFldDirector};
        JRadioButton[] rdbuttons = {rdBtnOne, rdBtnTwo, rdBtnThree, rdBtnFour, rdBtnFive, rdBtnSix, rdBtnSeven, rdBtnEight};
        ButtonGroup[] btnGrp = {btnGroupClassification, btnGroupScreen};

        for (int i = 0; i < txtfields.length; i++) {
            txtfields[i].setText("");
        }

        for (int i = 0; i < btnGrp.length; i++) {
            btnGrp[i].clearSelection();
        }

        cmbStudio.setSelectedIndex(0);

        txtAreaSynopsis.setText("");


    }

    public boolean addMovie() {

        JToggleButton[] tglbuttons = {tglBtn1, tglBtn2, tglBtn3, tglBtn4, tglBtn5};
        JRadioButton[] rdbuttons = {rdBtnOne, rdBtnTwo, rdBtnThree, rdBtnFour, rdBtnFive, rdBtnSix, rdBtnSeven, rdBtnEight};

        String title = txtFldTitle.getText();
        int selStudio = cmbStudio.getSelectedIndex();
        String classif = "";

        for (int i = 0; i < tglbuttons.length; i++) {
            if (tglbuttons[i].isSelected()) {
                classif = classification[i];
            }
        }


        String relDate = txtFldRelDate.getText();
        String staring = txtFldStaring.getText();
        String duration = txtFldDuration.getText();
        String director = txtFldDirector.getText();
        String synopsis = txtAreaSynopsis.getText();
        int screen = 0;

        for (int i = 0; i < rdbuttons.length; i++) {
            if (rdbuttons[i].isSelected()) {
                screen = (i + 1);
            }
        }

        for (int i = 0; i < movies.size(); i++) {

            Movie m = (Movie) movies.get(i);

            if (m.getScreen() == screen) {
                JOptionPane.showMessageDialog(this, odeon.rb.getString("ERROR SCREEN TAKEN"));
                return false;
            }
        }



        Movie m = new Movie();
        m.setTitle(title);
        m.setStudio(selStudio);
        m.setClassification(classif);
        m.setRelDate(relDate);
        m.setStaring(staring);
        m.setDuration(duration);
        m.setDirector(director);
        m.setSynopsis(synopsis);
        m.setScreen(screen);


        validateMovie(m);

        if (errors.size() > 0) {
            String output = "";
            for (int i = 0; i < errors.size(); i++) {
                output += "\n" + errors.get(i);
            }
            JOptionPane.showMessageDialog(null, output);

            return false;

        } else {
            movies.add(m);
//            System.out.println("The size of array list movies is: " + movies.size());
            return true;
        }

    }

    public void editMovie(int id) {

        JToggleButton[] tglbuttons = {tglBtn1, tglBtn2, tglBtn3, tglBtn4, tglBtn5};
        JRadioButton[] rdbuttons = {rdBtnOne, rdBtnTwo, rdBtnThree, rdBtnFour, rdBtnFive, rdBtnSix, rdBtnSeven, rdBtnEight};

        String title = txtFldTitle.getText();
        int selStudio = cmbStudio.getSelectedIndex();
        String classif = "";

        for (int i = 0; i < tglbuttons.length; i++) {
            if (tglbuttons[i].isSelected()) {
                classif = classification[i];
            }
        }

        String relDate = txtFldRelDate.getText();
        String staring = txtFldStaring.getText();
        String duration = txtFldDuration.getText();
        String director = txtFldDirector.getText();
        String synopsis = txtAreaSynopsis.getText();

        int screen = 0;

        for (int i = 0; i < rdbuttons.length; i++) {
            if (rdbuttons[i].isSelected()) {
                screen = (i + 1);
            }
        }

        Movie m = (Movie) movies.get(id);

//        Movie m = new Movie();
        m.setTitle(title);
        m.setStudio(selStudio);
        m.setClassification(classif);
        m.setRelDate(relDate);
        m.setStaring(staring);
        m.setDuration(duration);
        m.setDirector(director);
        m.setSynopsis(synopsis);
        m.setScreen(screen);

        addToList();

//        movies.add(m);

//        System.out.println("The size of array list movies is: " + movies.size());

    }

    public void addToList() {
        mList.clear();

        for (int i = 0; i < movies.size(); i++) {
            Movie m = (Movie) movies.get(i);
            mList.add(i, m.getTitle());
        }

        listMovies.setModel(mList);
    }

    public void removeMovie(int id) {
        int response = JOptionPane.showConfirmDialog(this, odeon.rb.getString("ERROR CONFIRM DELETE"), odeon.rb.getString("ERROR REMOVE MOVIE"), JOptionPane.YES_NO_OPTION);
//        System.out.println(response);

        if (response == 0) {
            movies.remove(id);
            addToList();

            clearFields();

            btnRemove.setEnabled(false);
            btnEdit.setEnabled(false);
            btnCancel.setEnabled(false);
        }

    }

    public void retrieveMovie(int id) {
        JToggleButton[] tglbuttons = {tglBtn1, tglBtn2, tglBtn3, tglBtn4, tglBtn5};
        JRadioButton[] rdbuttons = {rdBtnOne, rdBtnTwo, rdBtnThree, rdBtnFour, rdBtnFive, rdBtnSix, rdBtnSeven, rdBtnEight};

//        System.out.println("Movies size is: " + movies.size());
        Movie m = (Movie) movies.get(id);

        txtFldTitle.setText(m.getTitle());
        txtFldRelDate.setText(m.getRelDate());
        txtFldDuration.setText(m.getDuration());
        txtFldDirector.setText(m.getDirector());
        txtFldStaring.setText(m.getStaring());
        txtAreaSynopsis.setText(m.getSynopsis());



        if ("G".equals(m.getClassification())) {
            tglbuttons[0].setSelected(true);
        }
        if ("PG".equals(m.getClassification())) {
            tglbuttons[1].setSelected(true);
        }
        if ("12A".equals(m.getClassification())) {
            tglbuttons[2].setSelected(true);
        }
        if ("15A".equals(m.getClassification())) {
            tglbuttons[3].setSelected(true);
        }
        if ("18".equals(m.getClassification())) {
            tglbuttons[4].setSelected(true);
        }


        int screen = 0;

        if (m.getScreen() == 1) {
            rdbuttons[0].setSelected(true);
        }
        if (m.getScreen() == 2) {
            rdbuttons[1].setSelected(true);
        }
        if (m.getScreen() == 3) {
            rdbuttons[2].setSelected(true);
        }
        if (m.getScreen() == 4) {
            rdbuttons[3].setSelected(true);
        }
        if (m.getScreen() == 5) {
            rdbuttons[4].setSelected(true);
        }
        if (m.getScreen() == 6) {
            rdbuttons[5].setSelected(true);
        }
        if (m.getScreen() == 7) {
            rdbuttons[6].setSelected(true);
        }
        if (m.getScreen() == 8) {
            rdbuttons[7].setSelected(true);
        }




        cmbStudio.setSelectedIndex(m.getStudio());

    }

    public void validateMovie(Movie movie) {
        errors.clear();

        if (movie.getTitle().isEmpty()) {
            errors.add(odeon.rb.getString("ERROR TITLE"));
        }
        if (movie.getClassification().isEmpty()) {
            errors.add(odeon.rb.getString("ERROR CLASS"));
        }
        if (movie.getStaring().isEmpty()) {
            errors.add(odeon.rb.getString("ERROR STARING"));
        }
        if (movie.getDuration().isEmpty()) {
            errors.add(odeon.rb.getString("ERROR DURATION"));
        }
        if (movie.getDirector().isEmpty()) {
            errors.add(odeon.rb.getString("ERROR DIRECTOR"));
        }
        if (movie.getSynopsis().isEmpty()) {
            errors.add(odeon.rb.getString("ERROR SYNOPSIS"));
        }
        if (movie.getScreen() == 0) {
            errors.add(odeon.rb.getString("ERROR SCREEN"));
        }

        if (!movie.getDuration().matches("[0-9]{1,3}")) {
            errors.add(odeon.rb.getString("ERROR DURATION FORMAT"));
        }
        //(0[1-9]|[1-9]|[12][0-9]|3[01])/(0[1-9]|1[012]|[1-9])/(18|19|20)\\d{2} with leading zeros
        if (!movie.getRelDate().matches("(0[1-9]|[12][0-9]|3[01])/(0[1-9]|1[012])/(18|19|20)\\d{2}")) {
            errors.add(odeon.rb.getString("ERROR REL DATE"));
        }

    }

    public void updateLabels(ResourceBundle rb) {
        lblDate.setText(rb.getString("DATE"));

        lblTitle.setText(rb.getString("TITLE"));
        lblStudio.setText(rb.getString("STUDIO"));
        lblClassification.setText(rb.getString("CLASSIFICATION"));
        lblRelDate.setText(rb.getString("RELEASE DATE"));
        lblRelDateEx.setText(rb.getString("DD/MM/YYYY"));
        lblStaring.setText(rb.getString("STARRING"));
        lblDuration.setText(rb.getString("DURATION"));
        lblDirector.setText(rb.getString("DIRECTOR"));
        lblSynopsis.setText(rb.getString("SYNOPSIS"));
        lblScreen.setText(rb.getString("SCREEN"));
        rdBtnOne.setText(rb.getString("ONE"));
        rdBtnTwo.setText(rb.getString("TWO"));
        rdBtnThree.setText(rb.getString("THREE"));
        rdBtnFour.setText(rb.getString("FOUR"));
        rdBtnFive.setText(rb.getString("FIVE"));
        rdBtnSix.setText(rb.getString("SIX"));
        rdBtnSeven.setText(rb.getString("SEVEN"));
        rdBtnEight.setText(rb.getString("EIGHT"));
        btnBack.setText(rb.getString("BACK"));
        btnForward.setText(rb.getString("NEXT"));
        btnAdd.setText(rb.getString("ADD"));
        btnEdit.setText(rb.getString("EDIT"));
        btnUpdate.setText(rb.getString("UPDATE"));
        btnRemove.setText(rb.getString("REMOVE"));
        btnCancel.setText(rb.getString("CANCEL"));
        btnHome.setText(rb.getString("HOME"));
        btnGoToSales.setText(rb.getString("SALES"));
        lblCurrentMovie.setText(rb.getString("MOVIES NOW SHOWING"));
        btnClearAllMovies.setText(rb.getString("CLEAR ALL MOVIES"));
        btnClearAllFields.setText(rb.getString("CLEAR ALL FIELDS"));
        UIManager.put("OptionPane.yesButtonText", odeon.rb.getString("YES"));
        UIManager.put("OptionPane.noButtonText", odeon.rb.getString("NO"));
    }
}
